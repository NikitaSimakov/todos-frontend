{"version":3,"file":"static/js/781.6655cfe7.chunk.js","mappings":"mLACA,QAAuB,wBAAvB,EAAuD,yB,+BCOhD,MAAMA,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,KACrBC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAczC,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAUC,SAdTC,IACpBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,cACfnB,GACEoB,EAAAA,EAAAA,IAAM,CACJf,QACAG,cAGJU,EAAKG,OAAO,EAKyCC,aAAa,MAAKV,SAAA,EACnEF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAUF,SAAA,CAAC,SAE3BW,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,KAAK,QACLC,SAAUV,GAAKV,EAASU,EAAEW,OAAOC,aAGrClB,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAUF,SAAA,CAAC,YAE3BW,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLC,KAAK,WACLC,SAAUV,GAAKP,EAAYO,EAAEW,OAAOC,aAGxCL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQZ,SAAC,eAEvBW,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACzB,UAAWF,MACpB,E,OC5CQ,SAAS4B,IACtB,OACEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,CAAAnB,UACbF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,EACvBW,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAAApB,UACLW,EAAAA,EAAAA,KAAA,SAAAX,SAAO,aAETW,EAAAA,EAAAA,KAACxB,EAAS,QAIlB,C","sources":["webpack://todos-frontend/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.tsx","pages/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__Kx5pU\",\"label\":\"LoginForm_label__RGIMj\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { AppDispatch } from '../../redux/store';\nimport css from './LoginForm.module.scss';\nimport { isLoading } from '../../redux/auth/slice';\nimport Spinner from '../Spinner/Spinner';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const loading = useSelector(isLoading);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={css.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>\n      {<Spinner isLoading={loading} />}\n    </>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\nimport '../index.scss';\n\nexport default function Login() {\n  return (\n    <HelmetProvider>\n      <div className=\"authPage\">\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","loading","useSelector","isLoading","email","setEmail","useState","password","setPassword","_jsxs","_Fragment","children","className","css","onSubmit","e","preventDefault","form","currentTarget","logIn","reset","autoComplete","_jsx","type","name","onChange","target","value","Spinner","Login","HelmetProvider","Helmet"],"sourceRoot":""}